"""Add the categories, tasklocation, task, bid and task assignments tables



Revision ID: e99c246daa75
Revises: a993fe44ed1c
Create Date: 2025-03-29 02:32:50.443623

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e99c246daa75'
down_revision = 'a993fe44ed1c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Name of the category'),
    sa.Column('tasks_count', sa.Integer(), nullable=False, comment='Optional counter for the number of tasks in this category'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categories_name'), ['name'], unique=True)
        batch_op.create_index('uq_categories_name', ['name'], unique=True)

    op.create_table('task_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=False, comment='Latitude coordinate'),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=False, comment='Longitude coordinate'),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('area', sa.String(length=100), nullable=True, comment='Optional area or neighborhood'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_locations'))
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Task creator'),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('work_mode', sa.String(length=20), nullable=False, comment="Either 'remote' or 'physical'"),
    sa.Column('location_id', sa.Integer(), nullable=True, comment='Required if work_mode is physical'),
    sa.Column('budget', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('schedule_type', sa.String(length=20), nullable=False, comment="Scheduling type: 'specific_day', 'before_day', or 'flexible'"),
    sa.Column('specific_date', sa.DateTime(), nullable=True, comment="Exact date if schedule_type is 'specific_day'"),
    sa.Column('deadline_date', sa.DateTime(), nullable=True, comment="Deadline date if schedule_type is 'before_day'"),
    sa.Column('preferred_time', sa.Time(), nullable=True, comment="Preferred time if schedule_type is 'flexible'"),
    sa.Column('status', sa.String(length=20), nullable=False, comment="Task status: e.g., 'open', 'in_progress', 'completed', 'cancelled'"),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_tasks_category_id_categories'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['task_locations.id'], name=op.f('fk_tasks_location_id_task_locations'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tasks_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks'))
    )
    op.create_table('bids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False, comment="Bid status: e.g., 'pending', 'accepted', 'rejected'"),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_bids_task_id_tasks'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bids_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bids'))
    )
    op.create_table('task_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('task_giver', sa.Integer(), nullable=False, comment='User who posted the task'),
    sa.Column('task_doer', sa.Integer(), nullable=False, comment='User assigned to perform the task'),
    sa.Column('agreed_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=True, comment='Optional reference to a conversation for messaging'),
    sa.Column('status', sa.String(length=20), nullable=False, comment="Assignment status: e.g., 'assigned', 'in_progress', 'completed', 'cancelled'"),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['task_doer'], ['users.id'], name=op.f('fk_task_assignments_task_doer_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_giver'], ['users.id'], name=op.f('fk_task_assignments_task_giver_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_assignments_task_id_tasks'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_assignments'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_assignments')
    op.drop_table('bids')
    op.drop_table('tasks')
    op.drop_table('task_locations')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index('uq_categories_name')
        batch_op.drop_index(batch_op.f('ix_categories_name'))

    op.drop_table('categories')
    # ### end Alembic commands ###

"""create models for payment processing arcross the platform

Revision ID: 6ce06794dfdd
Revises: e468c1bf5fbb
Create Date: 2025-04-14 11:40:35.695188

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6ce06794dfdd'
down_revision = 'e468c1bf5fbb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('currency_code', sa.String(length=10), nullable=False),
    sa.Column('exchange_rate', sa.Numeric(precision=18, scale=6), nullable=True),
    sa.Column('currency_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('currency_code', name=op.f('pk_currencies'))
    )
    op.create_table('fees',
    sa.Column('fee_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=True),
    sa.Column('fee_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('fixed_fee', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('applicable_conditions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('fee_id', name=op.f('pk_fees'))
    )
    op.create_table('platform_wallet',
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('wallet_id', name=op.f('pk_platform_wallet'))
    )
    op.create_table('wallets',
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_wallets_user_id_users')),
    sa.PrimaryKeyConstraint('wallet_id', name=op.f('pk_wallets'))
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('from_wallet_id', sa.Integer(), nullable=False),
    sa.Column('to_wallet_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('transaction_fee', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('reference', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['from_wallet_id'], ['wallets.wallet_id'], name=op.f('fk_transactions_from_wallet_id_wallets')),
    sa.ForeignKeyConstraint(['to_wallet_id'], ['wallets.wallet_id'], name=op.f('fk_transactions_to_wallet_id_wallets')),
    sa.PrimaryKeyConstraint('transaction_id', name=op.f('pk_transactions'))
    )
    op.create_table('escrow',
    sa.Column('escrow_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('wallet_id_from', sa.Integer(), nullable=False),
    sa.Column('wallet_id_to', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('refund_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.transaction_id'], name=op.f('fk_escrow_transaction_id_transactions')),
    sa.ForeignKeyConstraint(['wallet_id_from'], ['wallets.wallet_id'], name=op.f('fk_escrow_wallet_id_from_wallets')),
    sa.ForeignKeyConstraint(['wallet_id_to'], ['wallets.wallet_id'], name=op.f('fk_escrow_wallet_id_to_wallets')),
    sa.PrimaryKeyConstraint('escrow_id', name=op.f('pk_escrow'))
    )
    op.create_table('audit_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('escrow_id', sa.Integer(), nullable=True),
    sa.Column('event', sa.Text(), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['escrow_id'], ['escrow.escrow_id'], name=op.f('fk_audit_logs_escrow_id_escrow')),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.transaction_id'], name=op.f('fk_audit_logs_transaction_id_transactions')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users')),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.wallet_id'], name=op.f('fk_audit_logs_wallet_id_wallets')),
    sa.PrimaryKeyConstraint('log_id', name=op.f('pk_audit_logs'))
    )
    op.create_table('escrow_actions',
    sa.Column('action_id', sa.Integer(), nullable=False),
    sa.Column('escrow_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=True),
    sa.Column('action_date', sa.DateTime(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['escrow_id'], ['escrow.escrow_id'], name=op.f('fk_escrow_actions_escrow_id_escrow')),
    sa.PrimaryKeyConstraint('action_id', name=op.f('pk_escrow_actions'))
    )
    op.drop_table('user_wallets')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_wallets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_wallets_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_user_wallets'),
    sa.UniqueConstraint('user_id', name='uq_user_wallets_user_id')
    )
    op.drop_table('escrow_actions')
    op.drop_table('audit_logs')
    op.drop_table('escrow')
    op.drop_table('transactions')
    op.drop_table('wallets')
    op.drop_table('platform_wallet')
    op.drop_table('fees')
    op.drop_table('currencies')
    # ### end Alembic commands ###
